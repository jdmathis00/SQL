#Here are a few queries I used in a database with multiple tables to get statistics about customer and order data.

-- How many many unique orders were placed in January? 

SELECT COUNT(distinct orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

-- How many of those orders were for an iPhone?

SELECT COUNT(distinct orderid)
FROM BIT_DB.JanSales
WHERE Product = 'iPhone'
AND length(orderid) = 6
AND orderid <> 'Order ID';


-- Select the customer account numbers for all the orders that were placed in February.

SELECT distinct acctnum
FROM BIT_DB.customers cust

INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id=FEB.orderid
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

-- Which product was the cheapest one sold in January, and what was the price?

SELECT distinct product, MIN(price)
FROM BIT_DB.JanSales Jan
GROUP BY product, price
ORDER BY price ASC LIMIT 1;

-- What is the total revenue for each product sold in January?

SELECT sum(quantity)*price as revenue
,product
FROM BIT_DB.JanSales
GROUP BY product;

-- Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?

SELECT product, SUM (quantity), SUM(quantity) * price as revenue
FROM BIT_DB.FebSales
WHERE location LIKE '%548 Lincoln St, Seattle, WA 98101%'
AND length(orderid) = 6
AND orderid <> 'Order ID'
GROUP BY product;

-- How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?

SELECT COUNT(DISTINCT c.acctnum), AVG(quantity*price)
FROM FebSales f
LEFT JOIN customers c
ON f.orderid = c.order_id
WHERE f.quantity >= 2
AND length(orderid) = 6
AND orderid <> 'Order ID';

-- Find all orderIDs in the MarSales table where the orderID has the characters ‘16’ in the beginning, followed by one unknown character, then a ‘0’, and any number of characters for the rest.

SELECT orderid
FROM MarSales
WHERE orderid LIKE '16_0%';
